services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - debezium_network

  postgres-source:
    image: postgres:latest
    environment:
      POSTGRES_USER: dbtest
      POSTGRES_PASSWORD: password@123
      POSTGRES_DB: source_db
      PGDATA: /var/lib/postgresql/data
    ports:
      - 25432:5432
    volumes:
      - pg_source_data:/var/lib/postgresql/data
      - ./custom-postgresql.conf:/etc/postgresql/postgresql.conf

  postgres-target:
    image: postgres:latest
    environment:
      POSTGRES_USER: nosql
      POSTGRES_PASSWORD: password@123
      POSTGRES_DB: target_db
    ports:
      - 25433:5432
    volumes:
      - pg_target_data:/var/lib/postgresql/data

  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: password@123
      MYSQL_DATABASE: source_db
      MYSQL_USER: dbtest
      MYSQL_PASSWORD: password@123
    ports:
      - 3306:3306
    volumes:
      - mysql_data:/var/lib/mysql

  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password@123
      MONGO_INITDB_DATABASE: source_db
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db

  sqlserver:
    image: mcr.microsoft.com/mssql/server:latest
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: password@123
      MSSQL_PID: Developer
    ports:
      - 1433:1433
    volumes:
      - sqlserver_data:/var/opt/mssql

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - es_data:/usr/share/elasticsearch/data
  kafka-connect:
    image: debezium/connect:1.9
    environment:
      - "BOOTSTRAP_SERVERS=kafka:9092"  # Kết nối Kafka connect đến Kafka container
      - "GROUP_ID=1"
      - "CONFIG_STORAGE_TOPIC=my_connect_configs"
      - "OFFSET_STORAGE_TOPIC=my_connect_offsets"
      - "STATUS_STORAGE_TOPIC=my_connect_statuses"
      - "PLUGIN_PATH=/usr/share/java,/etc/kafka-connect/jars"
    volumes:
      - ./plugins:/etc/kafka-connect/jars  # Mount plugin jar từ host vào container
    ports:
      - "8083:8083"  # Mở port để Kafka Connect UI có thể truy cập từ bên ngoài
    depends_on:
      - kafka  # Kafka Connect phải đợi Kafka chạy trước
    networks:
      - debezium_network  # Sử dụng cùng một mạng Docker

  debezium-postgres-connector:
    image: debezium/example-postgres:2.6
    environment:
      - "DATABASE_HOST=postgres-source"  # Địa chỉ PostgreSQL source DB
      - "DATABASE_PORT=5432"
      - "DATABASE_USER=dbtest"
      - "DATABASE_PASSWORD=password@123"
      - "DATABASE_DBNAME=source_db"
      - "DATABASE_SERVER_NAME=dbserver1"
      - "DATABASE_INCLUDE_LIST=source_db.public"
      - "PLUGIN_NAME=pgoutput"
      - "DATABASE_HISTORY_KAFKA_BOOTSTRAP_SERVERS=kafka:9092"  # Kết nối tới Kafka
      - "DATABASE_HISTORY_KAFKA_TOPIC=dbhistory.source_db"
    depends_on:
      - kafka-connect  # Đảm bảo Kafka Connect đã chạy trước khi connector này chạy
    networks:
      - debezium_network  # Sử dụng cùng mạng Docker
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./src/main/resources/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring_network

  grafana:
      image: grafana/grafana:latest
      container_name: grafana
      environment:
        - GF_SECURITY_ADMIN_USER=admin
        - GF_SECURITY_ADMIN_PASSWORD=admin
      ports:
        - "3000:3000"
      networks:
        - monitoring_network

volumes:
  pg_source_data:
  pg_target_data:
  mysql_data:
  mongodb_data:
  sqlserver_data:
  redis_data:
  es_data:

networks:
  debezium_network:
    driver: bridge
  monitoring_network:
    driver: bridge